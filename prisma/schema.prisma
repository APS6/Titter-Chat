generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id         String          @id
  username   String          @unique
  email      String          @unique
  bio        String?
  pfpURL     String
  posts      Post[]          @relation("UserPosts")
  likes      Like[]
  followedBy Follows[] @relation("following")
  following  Follows[] @relation("follower")
  sentDM     DirectMessage[] @relation("sentby")
  receivedDM DirectMessage[] @relation("sentto")
}

model Post {
  id         String   @id @unique @default(uuid())
  content    String   @db.Text
  images Image[]  
  postedAt   DateTime @default(now())
  postedBy   User     @relation("UserPosts", fields: [postedById], references: [id])
  postedById String
  likes      Like[]

  @@index([postedById])
}

model Image {
  id        String @id @unique @default(uuid())
  imageUrl  String
  post      Post   @relation(fields: [postId], references: [id])
  postId    String

  @@index([postId])
}

model Like {
  user   User   @relation(fields: [userId], references: [id])
  userId String
  post   Post   @relation(fields: [postId], references: [id])
  postId String

  @@id([postId, userId])
  @@index([postId])
  @@index([userId])
}

model Follows {
  follower    User @relation("follower", fields: [followerId], references: [id])
  followerId  String
  following   User @relation("following", fields: [followingId], references: [id])
  followingId String

  @@id([followerId, followingId])
  @@index([followerId])
  @@index([followingId])
}

model DirectMessage {
  id       String   @id @unique @default(uuid())
  content  String   @db.Text
  sentAt   DateTime @default(now())
  sentBy   User     @relation("sentby", fields: [sentById], references: [id])
  sentById String
  sentTo   User     @relation("sentto", fields: [sentToId], references: [id])
  sentToId String

  @@index([sentById])
  @@index([sentToId])
}
